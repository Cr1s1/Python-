# 5.3 for循环

# 5.3.1 遍历一个字符串
for item in 'Python':       # 冒号不要漏写了！
    print(item)
'''
运行结果：
--------
P
y
t
h
o
n
--------
'''

# 5.3.2 迭代一个字符串列表中的每一项
for item in ['Mosh', 'John', 'Sarah']:  # 用方括号定义一个由一系列名字构成的列表
    print(item)
'''
运行结果：
--------
Mosh
John
Sarah
--------
结论：每一次迭代，可以依次将列表中的一个名字赋值给变量item，并且输出这个名字
'''

# 5.3.3 迭代一个显式的数字列表中的每一项
for item in [1, 2, 3, 4]:  # 用方括号定义一个（显式的）数字列表
    print(item)
'''
运行结果：
--------
1
2
3
4
--------
结论：每一次迭代，可以依次将列表中的一个名字赋值给变量item，并且输出这个名字
'''

print('\n')

# 5.3.4 用range函数创建一个可迭代对象
# 1）默认从0开始
for item in range(10):
    print(item)
'''
运行结果：
--------
0
1
2
3
4
5
6
7
8
9
--------
结论：从0起以1为间隔递增；但不包含括号中的数字
'''

# 2）不从0开始
for item in range(5, 10):   # 自定义区间
    print(item)
'''
运行结果：
--------
5
6
7
8
9
--------
结论：从0起以1为间隔递增；但不包含括号中的数字
'''

# 3）设置数字的间隔，即相邻数字之差
for item in range(5, 10, 2):     # 数字从5到9，后面的数减去前面相邻的数得2
    print(item)
'''
运行结果：
--------
5
7
9
--------
结论：第三个数字设置序列中数字之间的间隔
'''

# 5.3.5 小练习：计算购物车中所有商品的总价
prices = [10, 20, 30]    # 商品价格的列表

total = 0                # 初始化一个变量，用于存放总价
for price in prices:     # 变量名可以自己定义
    total += price
print(f"Total: {total}")
'''
运行结果：
---------------
Total: 60
---------------
'''
